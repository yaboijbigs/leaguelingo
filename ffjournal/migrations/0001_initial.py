# Generated by Django 5.0.3 on 2024-09-06 02:52

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('team', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('college', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('height', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.CharField(blank=True, max_length=255, null=True)),
                ('injury_status', models.CharField(blank=True, max_length=255, null=True)),
                ('injury_body_part', models.CharField(blank=True, max_length=255, null=True)),
                ('injury_start_date', models.CharField(blank=True, max_length=255, null=True)),
                ('injury_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('practice_participation', models.CharField(blank=True, max_length=255, null=True)),
                ('practice_description', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_city', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_state', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_country', models.CharField(blank=True, max_length=255, null=True)),
                ('years_exp', models.IntegerField(blank=True, null=True)),
                ('high_school', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.JSONField()),
                ('rank_ave', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sleeper_league_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('latest_league_winner_roster_id', models.CharField(max_length=255)),
                ('waiver_budget', models.IntegerField()),
                ('playoff_teams', models.IntegerField()),
                ('veto_votes_needed', models.IntegerField(blank=True, null=True)),
                ('num_teams', models.IntegerField()),
                ('playoff_week_start', models.IntegerField()),
                ('trade_deadline', models.IntegerField(blank=True, null=True)),
                ('pick_trading', models.IntegerField(blank=True, null=True)),
                ('max_keepers', models.IntegerField(blank=True, null=True)),
                ('draft_id', models.CharField(max_length=255)),
                ('previous_league_id', models.CharField(max_length=255)),
                ('total_rosters', models.IntegerField()),
                ('data', models.JSONField()),
                ('custom_system_prompt', models.CharField(blank=True, max_length=500, null=True)),
                ('weekly_newsletter_pdf', models.CharField(blank=True, max_length=255, null=True)),
                ('scheduled_day', models.CharField(blank=True, default='Thursday', max_length=10, null=True)),
                ('scheduled_time', models.TimeField(blank=True, default=datetime.time(12, 0), null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('last_run_time', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leagues_owned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('settings', models.JSONField(blank=True, null=True)),
                ('event_metadata', models.JSONField(blank=True, null=True)),
                ('leg', models.IntegerField()),
                ('draft_picks', models.JSONField(blank=True, null=True)),
                ('creator', models.CharField(max_length=255)),
                ('created', models.BigIntegerField()),
                ('consenter_ids', models.JSONField()),
                ('roster_ids', models.JSONField()),
                ('adds', models.JSONField(blank=True, null=True)),
                ('drops', models.JSONField(blank=True, null=True)),
                ('waiver_budget', models.JSONField(blank=True, null=True)),
                ('status_updated', models.BigIntegerField()),
                ('sleeper_league_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffjournal.league', to_field='sleeper_league_id')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField()),
                ('label', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('sent', 'Sent')], default='draft', max_length=10)),
                ('sleeper_league_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffjournal.league', to_field='sleeper_league_id')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueMemberEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('unsubscribed', models.BooleanField(default=False)),
                ('confirmed', models.BooleanField(default=False)),
                ('subscribed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_confirmation_sent', models.DateTimeField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_emails', to='ffjournal.league')),
            ],
        ),
        migrations.CreateModel(
            name='Matchup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchup_id', models.IntegerField()),
                ('roster_id', models.IntegerField()),
                ('points', models.FloatField(blank=True, null=True)),
                ('custom_points', models.FloatField(blank=True, null=True)),
                ('week', models.IntegerField()),
                ('sleeper_league_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffjournal.league', to_field='sleeper_league_id')),
            ],
        ),
        migrations.CreateModel(
            name='Roster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roster_id', models.IntegerField()),
                ('owner_id', models.CharField(max_length=255)),
                ('co_owners', models.JSONField(blank=True, null=True)),
                ('keepers', models.JSONField(blank=True, null=True)),
                ('players', models.JSONField()),
                ('starters', models.JSONField()),
                ('sleeper_league_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffjournal.league', to_field='sleeper_league_id')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sleeper_user_id', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('team_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_owner', models.BooleanField(blank=True, null=True)),
                ('is_team_owner', models.BooleanField(blank=True, null=True)),
                ('is_co_owner', models.BooleanField()),
                ('sleeper_league_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffjournal.league', to_field='sleeper_league_id')),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='newsletters/')),
                ('articles', models.ManyToManyField(to='ffjournal.article')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffjournal.league')),
            ],
            options={
                'unique_together': {('league', 'week')},
            },
        ),
    ]
